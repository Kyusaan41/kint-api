{"_id":"pipe","_rev":"28-301ad311c212eff34acd2a8abfd42f3c","name":"pipe","description":"Pipe streams together with a more awesome syntax, like `a | b | c | pipe(process.stdout)`","dist-tags":{"latest":"1.1.0"},"versions":{"0.0.1":{"name":"pipe","description":"An implementation of bi-directional intercepting filter, such as those found in Java's MINA and Netty","version":"0.0.1","homepage":"https://github.com/falconair/nodepipe","author":{"name":"Shahbaz Chaudhary","email":"shahbazc@gmail.com"},"main":"./nodepipe","engines":{"node":"0.2.5"},"_id":"pipe@0.0.1","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.2.5","dist":{"shasum":"6a3ea98cb026abd253e5d74518dc922c4e19daf2","tarball":"https://registry.npmjs.org/pipe/-/pipe-0.0.1.tgz","integrity":"sha512-8tESQnbeUKIuET8aTNt3HL0EG7RuPT7C8gDrZ2lK2AjEUi7TOu6NPaJvk2Voe+tc7NkBqe4HRdftDA6w+caAvg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC5wmc5282IL+nzxwgs7Baodz+6M19bNPOUOTstYNeHoAiEAu8HQ2vYcGUSoTzY8A0FJ7Cm4gaf5HCT3SL7ODVKsNqA="}]}},"0.0.2":{"name":"pipe","description":"An implementation of bi-directional intercepting filter, such as those found in Java's MINA and Netty","version":"0.0.2","homepage":"https://github.com/falconair/nodepipe","author":{"name":"Shahbaz Chaudhary","email":"shahbazc@gmail.com"},"main":"./nodepipe","engines":{"node":">=0.4.8"},"_id":"pipe@0.0.2","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.10","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"a16fe6fc019d75bd987c4928a67e1e50e4f5b44f","tarball":"https://registry.npmjs.org/pipe/-/pipe-0.0.2.tgz","integrity":"sha512-67s0/X7rv2PX1sl64FQqC0qQuSpd1tv8Wh6c+U1lprj6Q7NxDYulCxZTbVbDvc/HSpZLYh7Oo821xReXSCZikQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDIEBw1f8iccxV6fCEj5WLbHmUeNxJn8XjLubUZtuuMdgIhAKgC3atH9j1+AG5jp+et8rLUGSDKKG5alk19V2GHVEVN"}]},"scripts":{}},"0.0.3":{"name":"pipe","description":"An implementation of bi-directional intercepting filter, such as those found in Java's MINA and Netty","version":"0.0.3","homepage":"https://github.com/falconair/nodepipe","author":{"name":"Shahbaz Chaudhary","email":"shahbazc@gmail.com"},"main":"./nodepipe","engines":{"node":">=0.4.8"},"_id":"pipe@0.0.3","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.10","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"f39ba32ad0a3546aa69f14500ec17a4e4b8fa5c9","tarball":"https://registry.npmjs.org/pipe/-/pipe-0.0.3.tgz","integrity":"sha512-0Sgnw/I5CyVH4xBLlxb0dDAhICWs0vOFpS1FcuiY67fCfK3MTSSNlIxpx5AVXJHFOxVPOBet0TE6bbKaSrXzAQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDiTPUs1hmqACscg1j6Rxosw4yLDeUOsDM0oN0TFKaSpQIhAMk5M8L/U9XMd/U6u3ZXtZK5k8Uhx9RGoUhy0v6lQ8b+"}]},"scripts":{},"maintainers":[{"name":"falcon","email":"shahbazc@gmail.com"}]},"1.0.0":{"name":"pipe","version":"1.0.0","description":"Pipe streams together with a more awesome syntax, like `a | b | c | pipe(process.stdout)`","main":"pipe.js","scripts":{"test":"node ./test.js"},"repository":{"type":"git","url":"git://github.com/hij1nx/pipechain.git"},"author":{"name":"hij1nx"},"license":"MIT","devDependencies":{"through":"~2.3.4"},"bugs":{"url":"https://github.com/hij1nx/pipechain/issues"},"_id":"pipe@1.0.0","dist":{"shasum":"e6b864997a4217f0c17b3b68f5dbb5c380a98d7a","tarball":"https://registry.npmjs.org/pipe/-/pipe-1.0.0.tgz","integrity":"sha512-PxXWQQRF/pYRZ1hJqarGrQIeUYCfo5mTUxmQNwsUr+RExxeF22TDv4KGzPAxdJUswxbA3urHu7LAaF6OnVdJrQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDpRfsKvYiIQ7ekHe5NAbOAmKpXPZ5Q7sPx/X6mZohv6wIgYNBTiaXDg/UW2JcAcR4aRlcyPc4rND+01aNJ7MA0X2Q="}]},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"hij1nx","email":"paolo@async.ly"},"maintainers":[{"name":"hij1nx","email":"paolo@async.ly"}]},"1.1.0":{"name":"pipe","version":"1.1.0","description":"Pipe streams together with a more awesome syntax, like `a | b | c | pipe(process.stdout)`","main":"pipe.js","scripts":{"test":"node ./test.js"},"repository":{"type":"git","url":"git://github.com/hij1nx/pipechain.git"},"author":{"name":"hij1nx"},"license":"MIT","devDependencies":{"through":"~2.3.4"},"gitHead":"d5d5296b4cf96d16b3c3430c283c18d02f6e4c38","bugs":{"url":"https://github.com/hij1nx/pipechain/issues"},"homepage":"https://github.com/hij1nx/pipechain#readme","_id":"pipe@1.1.0","_shasum":"248d07d09c6283fd4059af325a4cc570668ec824","_from":".","_npmVersion":"2.13.3","_nodeVersion":"0.12.5","_npmUser":{"name":"hij1nx","email":"paolo@async.ly"},"dist":{"shasum":"248d07d09c6283fd4059af325a4cc570668ec824","tarball":"https://registry.npmjs.org/pipe/-/pipe-1.1.0.tgz","integrity":"sha512-k9LRKFNycojfyz7aWJH/s5QxlMxnVaK06019gzxnho8JQ7oA6ylW1yOrDecQBiegDdMZNjh1ZvxPxUwz+R4Kig==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGzygW1+RKWJGbXEPMYd6+fv13ebSrNO7MMdS43ynqBTAiBPsZqMm1UBP40WZf+UyjxqCPC/4xBrVgGY3KecnBUIbg=="}]},"maintainers":[{"name":"hij1nx","email":"paolo@async.ly"}]}},"maintainers":[{"name":"hij1nx","email":"paolo@async.ly"}],"time":{"modified":"2022-06-24T00:28:59.451Z","created":"2011-02-06T03:21:28.542Z","0.0.1":"2011-02-06T03:21:29.122Z","0.0.2":"2011-06-13T19:06:40.423Z","0.0.3":"2011-10-06T02:18:49.359Z","1.0.0":"2013-10-31T19:06:27.611Z","1.1.0":"2015-08-17T16:44:10.805Z"},"author":{"name":"hij1nx"},"repository":{"type":"git","url":"git://github.com/hij1nx/pipechain.git"},"readme":"[![build-status](https://www.codeship.io/projects/45c20710-4c8c-0131-15d5-5a8cd3f550f8/status)](https://www.codeship.io/projects/11261)\n\n# SYNOPSIS\nProvides pipes by operator instead of a chain.\n\n# DESCRIPTION\nPipe streams together with a simpler syntax, like `a | b | c`\n\n# EXAMPLES\n`pipe` does not require `through`, i just like using through.\n\n```js\nvar through = require('through')\nrequire('pipe').install()\n\nvar a = through(function(d) {\n  this.queue(d.toString().toUpperCase())\n})\n\nvar b = through(function(d) {\n  this.queue(d.split('-').join(','))\n})\n\nvar c = through(function(d) {\n  this.queue(d.split(',').reverse().toString())\n})\n\na | b | c | process.stdout\n\na.write('a-s-d-f') // OMG WTF? => F,D,S,A\n```\n","homepage":"https://github.com/hij1nx/pipechain#readme","bugs":{"url":"https://github.com/hij1nx/pipechain/issues"},"license":"MIT","readmeFilename":"README.md","users":{"karlpokus":true,"darkever":true}}